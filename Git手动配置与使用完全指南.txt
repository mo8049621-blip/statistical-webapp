# Git手动配置与使用完全指南

## 前言

这是一份专为初学者准备的Git手动配置指南，无需使用任何批处理文件。按照以下步骤操作，您可以轻松完成Git的设置并使用它来管理代码。

## 一、Git基本配置（必须步骤）

Git需要知道您是谁，这样才能在您的提交记录中正确显示作者信息。

### 步骤1：打开命令提示符（CMD）
- 按下 `Win + R` 键
- 输入 `cmd` 并按 `Enter`

### 步骤2：设置您的用户名和邮箱
在命令提示符中输入以下两行命令（分别输入，每行输入后按Enter）：

```cmd
git config --global user.name "您的GitHub用户名"
git config --global user.email "您的GitHub邮箱"
```

> 注意：将引号内的内容替换为您自己的GitHub用户名和邮箱

### 步骤3：验证配置是否成功
输入以下命令检查刚才的配置是否生效：

```cmd
git config --global --list
```

如果能看到您设置的用户名和邮箱，说明配置成功！

## 二、Git与GitHub的认证方式（二选一）

要让Git能够访问您的GitHub仓库，需要设置认证方式。这里提供两种常用方法，推荐使用SSH密钥方式。

### 方法A：使用SSH密钥认证（推荐）

SSH密钥就像是一把"数字钥匙"，可以让您的电脑免密码访问GitHub。

#### 步骤1：检查是否已有SSH密钥
输入以下命令查看是否已有SSH密钥：

```cmd
dir %USERPROFILE%\.ssh
```

如果能看到 `id_rsa.pub` 文件，说明您已经有SSH密钥了，可以直接跳到步骤3。

#### 步骤2：生成新的SSH密钥
如果没有SSH密钥，输入以下命令生成一个新的：

```cmdssh-keygen -t rsa -b 4096 -C "您的GitHub邮箱"

```

然后会出现以下提示：
1. 输入保存密钥的文件路径：直接按 `Enter` 使用默认路径
2. 输入密码：直接按 `Enter` 设置为空密码（推荐，这样每次使用不需要输入密码）
3. 再次输入密码：再次按 `Enter`

#### 步骤3：查看并复制SSH公钥
输入以下命令查看您的SSH公钥：

```cmd
type %USERPROFILE%\.ssh\id_rsa.pub
```

屏幕上会显示一长串以 `ssh-rsa` 开头的文本，这就是您的SSH公钥。右键点击窗口标题栏，选择"编辑"→"全选"，然后再选择"编辑"→"复制"，将公钥复制到剪贴板。

#### 步骤4：将SSH公钥添加到GitHub
1. 打开浏览器，登录您的GitHub账号
2. 点击右上角的头像，选择 `Settings`（设置）
3. 在左侧菜单中选择 `SSH and GPG keys`（SSH和GPG密钥）
4. 点击 `New SSH key`（新建SSH密钥）
5. 在 `Title`（标题）框中输入一个您能识别的名称（如"我的笔记本电脑"）
6. 在 `Key`（密钥）框中粘贴您刚才复制的公钥
7. 点击 `Add SSH key`（添加SSH密钥）完成添加

#### 步骤5：测试SSH连接
回到命令提示符，输入以下命令测试SSH连接是否成功：

```cmd
ssh -T git@github.com
```

如果出现 `Hi 您的用户名! You've successfully authenticated...` 的提示，说明SSH连接成功！

### 方法B：使用HTTPS + 凭据管理器

如果您觉得SSH密钥设置太麻烦，可以使用HTTPS方式，但需要创建一个个人访问令牌。

#### 步骤1：配置Git凭据管理器
在命令提示符中输入以下命令：

```cmd
git config --global credential.helper manager-core
```

#### 步骤2：获取GitHub个人访问令牌
1. 打开浏览器，登录您的GitHub账号
2. 点击右上角的头像，选择 `Settings`（设置）
3. 在左侧菜单中选择 `Developer settings`（开发者设置）
4. 选择 `Personal access tokens`（个人访问令牌）→ `Tokens (classic)`（令牌（经典））
5. 点击 `Generate new token`（生成新令牌）→ `Generate new token (classic)`（生成新令牌（经典））
6. 在 `Note`（说明）框中输入一个您能识别的名称
7. 设置 `Expiration`（有效期），可以选择 `No expiration`（永不过期）
8. 在 `Select scopes`（选择作用域）中，勾选 `repo` 相关的所有权限
9. 滚动到页面底部，点击 `Generate token`（生成令牌）
10. **重要**：生成的令牌只会显示一次，请立即复制并保存到安全的地方

#### 步骤3：使用令牌进行认证
当您第一次使用 `git push` 或 `git pull` 命令时，Git会弹出一个窗口要求您输入凭据：
- **用户名**：输入您的GitHub用户名
- **密码**：输入您刚才复制的个人访问令牌（不是您的GitHub密码）

输入后，Git会记住这些凭据，后续操作就不需要再次输入了。

## 三、使用部署脚本

完成Git的基本配置和认证设置后，您就可以使用部署脚本了。

### 步骤1：打开命令提示符并导航到项目目录
输入以下命令并按 `Enter`：

```cmd
cd Desktop\Demo2
```

### 步骤2：运行超级简单部署脚本
输入以下命令并按 `Enter`：

```cmd
超级简单部署.bat
```

### 步骤3：按照脚本提示操作
1. 输入您的GitHub用户名
2. 输入您的GitHub仓库名称
3. 等待脚本自动执行安装依赖、构建项目和部署过程
4. 部署完成后，脚本会显示访问网址

## 四、常见问题解答

### 问：为什么我运行部署脚本时出现乱码？
答：这是因为批处理文件的编码与Windows命令提示符的默认编码不匹配。您可以尝试以下方法：
1. 在命令提示符中先输入 `chcp 65001` 然后按 `Enter`，再运行脚本
2. 或者使用Notepad++等工具打开批处理文件，将编码改为ANSI后保存

### 问：部署失败了怎么办？
答：部署失败可能有多种原因，您可以尝试：
1. 检查Git和Node.js是否正确安装
2. 确认您的GitHub用户名和仓库名称输入正确
3. 检查网络连接是否正常
4. 查看错误信息，根据提示解决问题

### 问：我忘记了个人访问令牌怎么办？
答：个人访问令牌一旦生成后就无法再次查看，您需要：
1. 按照方法B的步骤2重新生成一个新的个人访问令牌
2. 或者切换到使用SSH密钥认证方式

## 五、总结

Git的配置其实并不复杂，主要包括以下几个步骤：
1. 设置您的用户名和邮箱（必须）
2. 配置认证方式（SSH密钥或HTTPS令牌，二选一）
3. 运行部署脚本

如果您在操作过程中遇到任何问题，请不要着急，大多数问题都可以通过仔细检查配置和重新尝试来解决。Git是一个强大的工具，掌握它将大大提升您的开发效率！